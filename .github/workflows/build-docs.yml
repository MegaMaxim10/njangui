# Simple workflow for deploying static content to GitHub Pages
name: Build Documentation
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_docs:
    runs-on: ubuntu-latest
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          # Update package list and install essential tools
          sudo apt-get update
          sudo apt-get install -y -qq build-essential wget curl xzdec

          # Install a specific version of pandoc
          PANDOC_VERSION="3.5"
          PANDOC_DEB="pandoc-${PANDOC_VERSION}-1-amd64.deb"
          wget "https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/${PANDOC_DEB}"
          sudo dpkg -i ${PANDOC_DEB}
          rm ${PANDOC_DEB}

          # Download and install the latest version of texlive manually
          # Set up installation directory and CTAN mirror
          REMOTE="http://mirror.ctan.org/systems/texlive/tlnet"
          INSTALL="/tmp/install-texlive"
          TEXLIVE_HOME="$HOME/texlive"
          rm -rf $TEXLIVE_HOME/*
          mkdir -p $INSTALL
          
          # Download and extract the installer
          curl -sSL $REMOTE/install-tl-unx.tar.gz | tar -xzv -C $INSTALL --strip-components=1
          
          # Create a TeX Live profile for non-interactive installation
          cat <<EOF > $INSTALL/texlive.profile
          TEXDIR $TEXLIVE_HOME
          TEXMFCONFIG ~/.texlive/texmf-config
          TEXMFHOME ~/texmf
          TEXMFLOCAL $TEXLIVE_HOME/texmf-local
          TEXMFSYSCONFIG $TEXLIVE_HOME/texmf-config
          TEXMFSYSVAR $TEXLIVE_HOME/texmf-var
          TEXMFVAR ~/.texlive/texmf-var
          collection-basic 1
          collection-latex 1
          collection-latexrecommended 1
          collection-fontsrecommended 1
          collection-luatex 1
          collection-xetex 1
          option_doc 0
          option_src 0
          selected_scheme scheme-basic
          instopt_adjustpath 1
          collection-bibtexextra 0
          collection-fontsextra 0
          collection-langchinese 0
          collection-latexextra 0
          collection-mathscience 0
          tlpdbopt_autobackup 0
          tlpdbopt_install_docfiles 0
          tlpdbopt_install_srcfiles 0
          EOF

          # Run the TeX Live installer in non-interactive mode
          $INSTALL/install-tl -no-gui -profile $INSTALL/texlive.profile
          
          # Set up PATH for the installed TeX Live binaries
          export PATH="$TEXLIVE_HOME/bin/x86_64-linux:$PATH"
          echo "$TEXLIVE_HOME/bin/x86_64-linux" >> $GITHUB_PATH
          
          # Initialize tlmgr and install necessary packages
          tlmgr init-usertree
          tlmgr install adjustbox background bidi csquotes footmisc footnotebackref fvextra mdframed pagecolor sourcecodepro sourcesanspro titling ulem upquote xurl
          
          # Additional packages
          tlmgr install letltxmacro zref everypage framed collectbox
          tlmgr install xecjk filehook unicode-math ucharcat pagecolor babel-german ly1 mweights sourcecodepro sourcesanspro mdframed needspace fvextra footmisc footnotebackref background

      - name: Build PDF
        run: |
          cd docs
          make pdf

      - name: Build HTML
        run: |
          cd docs
          make html
          ls -lR

      - name: Upload PDF Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: pdf
          path: docs/build/*.pdf
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/build'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
